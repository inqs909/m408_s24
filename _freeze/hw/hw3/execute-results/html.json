{
  "hash": "7233537b3129093e5e68d768f9fdbd0e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Homework 3\"\ndate: 2/14/24\neditor: visual\ndraft: false\n---\n\n\n\n\n**Due 2/24/24 \\@ 11:59 PM**\n\nUse an RMD or QMD file to create the assignment.\n\nYou must comment all your code to receive credit.\n\nSubmit the \\*.html file to canvas.\n\n## Problem 1\n\nUsing the vectors below, use `sapply()` to determine if the numbers are even or odd.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- 1:20\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Answer\"}\nevenodd <- function(x){\n  if (x %% 2 ==0){\n    return(\"Even\")\n  } else {\n    return(\"Odd\")\n  }\n}\nsapply(x, evenodd)\n```\n:::\n\n\n## Problem 2\n\nEvaluate the following function:\n\n$$\nk(j(i(h(g(f(x))))))\n$$\n\n-   $f(x)=\\sin(x)$\n\n-   $g(x) = x^2 +5$\n\n-   $h(x) = \\exp{2x}$\n\n-   $i(x) = \\sin(\\pi x)$\n\n-   $j(x) = x^2 + 5$\n\n-   $k(x) = \\sqrt x$\n\nYou are not allowed to store values, but you may create and store functions.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Answer\"}\n4 |> sin() |> \n  (\\(x) x^2 + 5)() |> \n  (\\(x) exp(2*x))() |> \n  sinpi() |> \n  (\\(x) x^2 + 5)() |> \n  sqrt()  \n```\n:::\n\n\n## Problem 3\n\nFrom the `penguins` data set from `palmerpenguins` package, create a new variable indicating if the penguin's flipper length (`flipper_length_mm`) is greater than the average flipper length. Afterwards, group by the new variable and find the mean `body_mass_g`.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Answer\"}\nlibrary(tidyverse)\nlibrary(palmerpenguins)\n\npenguins |> drop_na() |> \n  mutate(hilo = ifelse(flipper_length_mm > mean(flipper_length_mm),\n                       \"Flipper Length greater than mean\",\n                       \"Flipper Length less than mean\")) |>\n  group_by(hilo) |> \n  summarise(mean = mean(body_mass_g))\n```\n:::\n\n\n## Problem 4\n\nFrom the `penguins` data set from `palmerpenguins` package, find the mean and standard deviation of `flipper_length_mm` by `species`.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Answer\"}\nlibrary(tidyverse)\nlibrary(palmerpenguins)\npenguins |> drop_na() |> \n  group_by(species) |> \n  summarise(mean = mean(flipper_length_mm),\n            sd = sd(flipper_length_mm))\n```\n:::\n\n\n## Problem 5\n\nUsing the vector `random_dates` generated from the code below:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Set the start and end dates\nstart_date <- as.POSIXct(\"2022-01-01 00:00:00\")\nend_date <- as.POSIXct(\"2022-12-31 23:59:59\")\n\n# Generate a vector of random dates and times between the start and end dates\nrandom_dates <- as.POSIXct(runif(10, start_date, end_date), origin = \"1970-01-01\")\n\n# Print the vector of random dates and times\nrandom_dates\n```\n:::\n\n\nUse `sapply()` to determine what day of the week (in words) does the date represent. Hint: Look at the `wday` function from `lubridate`.\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\" code-summary=\"Answer\"}\nlibrary(tidyverse)\nsapply(random_dates, wday, label = TRUE)\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}