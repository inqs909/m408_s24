{
  "hash": "55eaa6d0cd6ca4a9b8ecad5c0fdcb35c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Residual Analysis\"\nformat:\n  revealjs:\n    scrollable: true\n    navigation-mode: vertical\n    controls-layout: bottom-right\n    controls-tutorial: true\n    incremental: false \n    chalkboard:\n      src: chalkboard.json\n      storage: chalkboard_pres\n      theme: whiteboard\n      chalk-width: 4\nknitr:\n  opts_chunk: \n    echo: false\n    eval: false\n    message: false\n    warnings: false\n    comment: \"#>\" \n\neditor: visual\n---\n\n\n\n\n\n## Learning Objective\n\n-   Model Assumptions\n-   Residual Analysis\n-   Multicollinearity\n\n# Model Assumptions\n\n## Model\n\n$$\ny = \\beta_0 + \\beta_1 x + \\epsilon\n$$\n\n-   $\\epsilon \\sim N(0,\\sigma^2)$\n\n## Model Scatter Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- rnorm(1000, 8)\ny <- -4 + 2*x + rnorm(1000, sd = 1)\ndf <- tibble(x,y)\nggplot(df, aes(x,y)) + geom_point() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](8a_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\n\n## Model Assumptions\n\n-   Errors are normally distributed\n\n-   Constant Variance\n\n-   Linearity\n\n-   Independence\n\n-   No outliers\n\n## Errors Normally Distributed\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](8a_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\n\n\n## Constant Variance\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](8a_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n## Constant Variance\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- rnorm(1000, 8, sd = 0.5)\ny <- sapply(x, \\(.) -4 + 5*. + rnorm(1, sd = ./2))\ndf <- tibble(x,y)\nggplot(df, aes(x,y)) + geom_point() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](8a_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\n\n## Linearity\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- rnorm(1000, 8)\ny <- -4 + 2*x + rnorm(1000, sd = 1)\ndf <- tibble(x,y)\nggplot(df, aes(x,y)) + geom_point() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](8a_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n\n## Linearity\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- rnorm(1000, 8, sd = 4)\ny <- -4 - 1*x + -2*x^2 + rnorm(1000, sd = 16)\ndf <- tibble(x,y)\nggplot(df, aes(x,y)) + geom_point() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](8a_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n## No Outliers\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- rnorm(1000, 8)\ny <- -4 + 2*x + rnorm(1000, sd = 1)\ndf <- tibble(x,y)\nggplot(df, aes(x,y)) + geom_point() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](8a_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n# Residuals and Influential Measurements\n\n## Residuals\n\nResiduals are the errors between the observed value and the estimated model. Common residuals include\n\n-   Raw Residual\n\n-   Standardized Residual\n\n-   Jackknife (studentized) Residuals\n\n## Influential Measurements\n\nInfluential measures are statistics that determine how much a data point affects the model. Common influential measures are\n\n-   Leverages\n\n-   Cook's Distance\n\n## Raw Residuals\n\n$$\n\\hat r_i = y_i - \\hat y_i\n$$\n\n## Leverages\n\n$$\nH = \\boldsymbol X (\\boldsymbol X^\\mathrm T\\boldsymbol X)^{-1}\\boldsymbol X ^\\mathrm T\n$$\n\n-   $\\boldsymbol X$: design matrix\n\n-   $h_i = H[i,i]$: leverage for $i$th value\n\n## Standardized Residuals\n\n$$\n\\hat r^*_i = \\frac{\\hat r_i}{\\sqrt{\\hat\\sigma^2(1-h_{i})}}\n$$\n\n-   $\\hat \\sigma^2$: Mean square error\n\n-   $h_{ii}$: leverage of $i$th data point\n\n## Jackknife Residuals\n\n$$\n\\hat r ^\\prime_i = \\frac{y_i - \\hat y_{i(i)}}{\\sqrt{\\hat \\sigma^2_{(i)}(1-h_{i})}}\n$$\n\n-   $\\hat y_{i(i)}$: fitted value for $i$th value from model fitted without $i$th data point\n\n-   $\\hat\\sigma^2_{(i)}$: mean square error from model fitted without $i$th data point\n\n## Cook's Distance\n\n$$\n\\hat d_i = \\frac{(y_i - \\hat y_{i})^2}{(k+1)\\hat \\sigma^2}\\left\\{\\frac{h_i}{(1-h_i)^2}\\right\\}\n$$\n\n-   $k$: number of predictors\n\n# Residual Analysis\n\n## Residual Analysis\n\nA residual analysis is used to test the assumptions of linear regression.\n\n## QQ Plot\n\nA qq (quantile-quantile) plot will plot the estimated quantiles of the residuals against the theoretical quantiles from a normal distribution function. If the points from the qq-plot lie on $y=x$, it is said that the residuals follow a normal distribution.\n\n## Residual vs Fitted Plot\n\nThis plot allows you to assess the linearity, constant variance, and identify potential outliers. Create a scatter plot between the fitted values (x-axis) and the raw/standardized residuals (y-axis).\n\n## Residual vs X Plots\n\nThis plot helps identify issues with linearity and suggests potential solution. Create a scatter plot between raw/standardized residuals (y-axis) and the predictor variables (x-axis).\n\n## Outlier Plots\n\nAn outlier plot can tell you if there are any outliers in the data. Create a scatter plot between the index number (x-axis) and standardized/studentized residuals (y-axis)\n\n## Influential Observations Plots\n\nWill identify outliers/observations that will have an affect on the model. Create a scatter plot between the index number (x-axis) and leverages/cook's distance (y-axis).\n\n# Multicollinearity\n\n## Mulitcollinearity\n\nMulticolinearity occurs when predictor variable have a correlation between each other. Collinearity between predictor variables with inflate the standard errors and cause problems with inference.\n\n## Variance Inflation Factor\n\nThe variance inflation factor is a measurement on how much variables are collinear with each other. A value greater than 10 is a cause for concern and action should be taken.\n\n# R Code\n\n## Fitting a model\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx_lm <- iris |> lm(Petal.Length ~ Sepal.Length + Sepal.Width, data = _) \nx_lm |> summary()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> Call:\n#> lm(formula = Petal.Length ~ Sepal.Length + Sepal.Width, data = iris)\n#> \n#> Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -1.25582 -0.46922 -0.05741  0.45530  1.75599 \n#> \n#> Coefficients:\n#>              Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept)  -2.52476    0.56344  -4.481 1.48e-05 ***\n#> Sepal.Length  1.77559    0.06441  27.569  < 2e-16 ***\n#> Sepal.Width  -1.33862    0.12236 -10.940  < 2e-16 ***\n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 0.6465 on 147 degrees of freedom\n#> Multiple R-squared:  0.8677,\tAdjusted R-squared:  0.8659 \n#> F-statistic:   482 on 2 and 147 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\n\n## Data Prep\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_resid <- tibble(obs = 1:nrow(x_lm$model),\n                   x_lm$model, \n                   resid = resid(x_lm),\n                   fitted = fitted(x_lm),\n                   sresid = rstandard(x_lm),\n                   hatvals = hatvalues(x_lm),\n                   jackknife =  rstudent(x_lm),\n                   cooks = cooks.distance(x_lm)\n                   )\n```\n:::\n\n\n\n## Residual vs Fitted\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_resid |> \n  ggplot(aes(fitted, resid)) + geom_point() +\n    geom_hline(yintercept = 0) +\n    geom_smooth(se = F) +\n    theme_bw()\n```\n\n::: {.cell-output-display}\n![](8a_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n## QQ Plot\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_resid |> \n  ggplot(aes(sample = resid)) + \n    stat_qq() +\n    stat_qq_line() +\n    theme_bw()\n```\n\n::: {.cell-output-display}\n![](8a_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n## Residuals vs X\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_resid |> \n  ggplot(aes(Sepal.Length, resid)) + geom_point() +\n    geom_hline(yintercept = 0) +\n    stat_smooth(se = F) +\n    theme_bw()\n```\n\n::: {.cell-output-display}\n![](8a_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\ndf_resid |> \n  ggplot(aes(Sepal.Width, resid)) + geom_point() +\n    geom_hline(yintercept = 0) +\n    stat_smooth(se = F) +\n    theme_bw()\n```\n\n::: {.cell-output-display}\n![](8a_files/figure-html/unnamed-chunk-13-2.png){width=672}\n:::\n:::\n\n\n\n## Jackknife Residuals\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_resid |> \n  ggplot(aes(obs, jackknife)) + geom_point() +\n    theme_bw()\n```\n\n::: {.cell-output-display}\n![](8a_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n## Levarages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_resid |> \n  ggplot(aes(obs, hatvals)) + geom_point() +\n    theme_bw()\n```\n\n::: {.cell-output-display}\n![](8a_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\n\n## Cook's Distance\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_resid |> \n  ggplot(aes(obs, cooks)) + \n    geom_point() +\n    theme_bw()\n```\n\n::: {.cell-output-display}\n![](8a_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\n\n## Multicolinearity\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(car)\niris |>  with(cor(Sepal.Length, Sepal.Width))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] -0.1175698\n```\n\n\n:::\n\n```{.r .cell-code}\nvif(x_lm)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> Sepal.Length  Sepal.Width \n#>     1.014016     1.014016\n```\n\n\n:::\n:::\n\n\n\n## Example\n\nThe `taylor` package contains the `taylor_all_songs` data frame with information on all of Taylor Swift's Songs. Fit a linear regression model and run a residual analysis on the following equation:\n\n$$\ndanceability = energy\\ +\\ speechiness\\ +\\ acousticness\\ +\\ instrumentalness \n$$\n",
    "supporting": [
      "8a_files/figure-html"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}