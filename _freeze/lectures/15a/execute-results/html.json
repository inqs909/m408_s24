{
  "hash": "63530b01cf7d3b035c5bd89dd0d0b90e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: |\n  Recurrent \\\n  Neural Networks\nsubtitle: \"Time-Series and Audio Processing\"\nformat:\n  revealjs:\n    scrollable: true\n    navigation-mode: vertical\n    controls-layout: bottom-right\n    controls-tutorial: true\n    incremental: false \n    chalkboard:\n      src: chalkboard.json\n      storage: chalkboard_pres\n      theme: whiteboard\n      chalk-width: 4\nknitr:\n  opts_chunk: \n    echo: true\n    eval: true\n    message: false\n    warnings: false\n    comment: \"#>\" \n    \nrevealjs-plugins:\n  - pointer\n  - verticator\n  \nfilters: \n  - reveal-header\n  - code-fullscreen\n  - reveal-auto-agenda\n\neditor: source\n---\n\n\n\n# Sequential Data\n\n## Sequential Data\n\nSequential data is data that is obtained in a series:\n\n$$\nX_{(0)}\\rightarrow\nX_{(1)}\\rightarrow\nX_{(2)}\\rightarrow\nX_{(3)}\\rightarrow\n\\cdots\\rightarrow\nX_{(J-1)}\\rightarrow\nX_{(J)}\n$$ \\## Stochastic Procceses\n\nA stochastic process is a collection of random variables, that can be indexed by a parameters. Sequential data can be thought of as a stochastic process.\n\n::: fragment\nThe generation of a variable $X_{(j)}$ may or may not be dependent of the previous values.\n:::\n\n## Examples of Sequential Data\n\n-   Documents and Books\n\n-   Temperature\n\n-   Stock Prices\n\n-   Speech/Recordings\n\n-   Handwriting\n\n# Recurrent Neural Networks\n\n## RNN\n\nRecurrent Neural Networks are designed to analyze input data that is sequential data.\n\n::: fragment\nAn RNN can accounts for the position of a data point in the sequence as well as the distance it has to other data points.\n:::\n\n::: fragment\nUsing the data sequence, we can predict and outcome $Y$.\n:::\n\n## RNN\n\n![Source: ISLR2](img/islr2/Chapter10/10_12.png)\n\n# Document Classification\n\n## Document Classification\n\nDocument Classification is the process of classifying a\n\n# Time Series\n\n# R Code\n",
    "supporting": [
      "15a_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}