{
  "hash": "7593bc5cf06e4bf52264a77c55479154",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Generalized Linear Models\"\nsubtitle: \"Residual Analysis\"\n\nformat:\n  revealjs:\n    scrollable: true\n    navigation-mode: vertical\n    controls-layout: bottom-right\n    controls-tutorial: true\n    incremental: false \n    chalkboard:\n      src: chalkboard.json\n      storage: chalkboard_pres\n      theme: whiteboard\n      chalk-width: 4\n      \nknitr:\n  opts_chunk: \n    echo: true\n    eval: true\n    message: false\n    warnings: false\n    comment: \"#>\"\n    \nrevealjs-plugins:\n  - pointer\n  - verticator\n  \nfilters: \n  - reveal-header\n  - code-fullscreen\neditor: visual\n\neditor_options:\n  chunk_output_type: inline\n---\n\n\n## Learning Outcomes\n\n-   Model Diagnostics\n\n-   Residuals\n\n-   Residual Analysis\n\n-   Model Selection\n\n\n\n\n\n# Model Diagnostics\n\n## Assumptions\n\n-   Linearity\n\n-   Correct Distribution\n\n    -   Random Component\n\n    -   Link Function\n\n-   Dispersion parameter constant\n\n-   Independence\n\n-   No Outliers\n\n# Residuals\n\n## Raw Residuals\n\n$$\nr = y - \\hat \\mu\n$$\n\n-   $\\hat \\mu$: fitted value\n\n## Working Responses\n\n$$\nz_i = \\hat \\eta_i + \\frac{d\\eta_i}{d\\mu_i}(y_i-\\hat\\mu_i)\n$$\n\n## Partial Residuals\n\n$$\nu_{ij} = e_i + \\hat\\beta_j x_{ij}\n$$\n\n-   $e_i = z_i - \\hat \\eta_i$\n\n## Pearson Residuals\n\n$$\nr^* = \\frac{y-\\hat \\mu}{\\sqrt{V(\\hat\\mu)}}\n$$\n\n-   $\\hat\\mu$: fitted value\n\n-   $V(\\mu)$: variance function\n\n## Deviance Residuals\n\n$$\nr^\\prime = \\mathrm{sign}(y-\\hat\\mu)\\sqrt{d(y,\\hat\\mu)}\n$$\n\n-   $d(y,\\mu)=2\\left\\{t(y,y) - t(y,\\mu)\\right\\}$\n\n-   $t(y, \\mu)=y\\theta - \\kappa(\\theta)$\n\n## Quantile Residuals\n\n$$\nr^+ = \\Phi^{-1}\\left\\{F(y;\\hat\\mu,\\phi)\\right\\}\n$$\n\n-   $\\Phi^{-1}$: Inverse CDF of Standard Normal Distribution\n\n-   $F(\\cdot)$: CDF of random variable $y$\n\n## Leverages\n\n$$\nH = W^{1/2} X(X^{\\mathrm T}X)^{-1}X^{\\mathrm T}W^{1/2}\n$$\n\n-   $X$: Design Matrix\n\n-   $W = \\mathrm{diag}(W_1, \\cdots, W_n)$\n\n-   $W_i = \\frac{(d\\mu_i/d\\eta_i)^2}{V(\\hat\\mu_i)}$\n\n-   $h_i$: diagonal element of $H$ is the the leverage for observation $i$\n\n## Standardized Residuals\n\n::: columns\n::: {.column width=\"50%\"}\n$$\nr^*_s = \\frac{y -\\hat \\mu}{\\sqrt{\\hat\\phi V(\\hat\\mu)(1-h)}}\n$$\n:::\n\n::: {.column width=\"50%\"}\n$$\nr^\\prime_s = \\frac{\\mathrm{sign}(y-\\hat\\mu)\\sqrt{d(y,\\hat\\mu)}}{\\sqrt{\\hat\\phi(1-h)}}\n$$\n:::\n:::\n\n## Cook's Distance\n\n$$\nD \\approx\\frac{(r^*_s)^2}{p^\\prime}\\frac{h}{1-h}\n$$\n\n-   $p^\\prime$: number of predictors plus one\n\n# Residual Analysis\n\n## Residual Plots\n\n-   Residual plots are used to test both the systematic and random component of the model\n\n-   It can also be used to identify potential outliers in the data.\n\n## Fitting a Model\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbin_model <- bacteria %$% glm(y ~ ap + hilo, \n                 family = binomial(link = \"logit\"))\n```\n:::\n\n\n## Residual Plot Data Frame\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(statmod)\nresid_df <- data.frame(obs = 1:nrow(bin_model$model), # <1>\n                       bin_model$model, # <2> \n                       fitted = fitted(bin_model), # <3> \n                       eta = bin_model$linear.predictors, # <4> \n                       raw = resid(bin_model, type = \"response\"), # <5> \n                       pearson = resid(bin_model, type = \"pearson\"), # <6> \n                       deviance = resid(bin_model), # <7> \n                       working = resid(bin_model, type = \"working\") +\n                                 bin_model$linear.predictors, # <8> \n                       partial = resid(bin_model, type = \"partial\"), # <9> \n                       std_pear = rstandard(bin_model, \n                                            type = \"pearson\"), # <10> \n                       std_dev = rstandard(bin_model), # <11> \n                       stud_dev = rstudent(bin_model), # <12> \n                       qresid = qresid(bin_model), # <13> \n                       leverages = hatvalues(bin_model), # <14> \n                       cooks = cooks.distance(bin_model)) # <15> \n```\n:::\n\n\n1.  Index\n2.  Data to fit model\n3.  $\\hat \\mu$\n4.  $\\hat \\eta$\n5.  Raw Residual\n6.  Pearson Residual\n7.  Deviance Residual\n8.  Working Responses\n9.  Partial Values: each individual X\n10. Standardized Pearson Residuals\n11. Standardized Deviance Residuals\n12. Studentized Deviance Residuals\n13. Quantile Residuals\n14. Leverages\n15. Cook's Distance\n\n## Residuals vs Fitted\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nggplot(resid_df, aes(x = fitted, y = deviance)) + geom_point() +\n  stat_smooth() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](9b_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n## Working Responses vs $\\hat\\eta$\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(resid_df, aes(x = eta, y = working)) + geom_point() +\n  stat_smooth() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](9b_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n## Partial Residuals vs X\n\n::: panel-tabset\n## ap\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(resid_df, aes(ap, partial.ap)) + geom_point() +\n  stat_smooth() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](9b_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n## hilo\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(resid_df, aes(hilo, partial.hilo)) + geom_point() +\n  stat_smooth() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](9b_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n:::\n\n## QQ Plot of Quantile Residuals\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(resid_df, aes(sample = qresid)) + stat_qq() +\n  stat_qq_line() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](9b_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n## Leverages Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(resid_df, aes(obs, leverages)) + geom_point() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](9b_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n## Cook's Distance Plot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(resid_df, aes(obs, cooks)) + geom_point() +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](9b_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n# Model Selection\n\n## AIC\n\n$$\n\\mathrm{AIC} = -2\\ell(\\hat{\\boldsymbol\\beta},\\hat\\phi,y) + 2 p^{\\prime} \n$$\n\n-   $\\ell(\\cdot)$: log-likelihood function\n\n-   $p^\\prime$: number of predictors plus one\n\n-   Lower is better\n\n## BIC\n\n$$\n\\mathrm{BIC} = -2\\ell(\\hat{\\boldsymbol\\beta}, \\hat \\phi, y) + \\log (n) (p^\\prime+1)\n$$\n\n-   $\\ell(\\cdot)$: log-likelihood function\n\n-   $p^\\prime$: number of predictors plus one\n\n-   Lower is better\n",
    "supporting": [
      "9b_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}