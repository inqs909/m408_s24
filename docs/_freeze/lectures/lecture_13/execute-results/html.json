{
  "hash": "8cd53842b83d1b56e31b7070e120068c",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Multivariable Linear Regression\"\nformat:\n  revealjs:\n    scrollable: true\n    navigation-mode: vertical\n    controls-layout: bottom-right\n    controls-tutorial: true\n    incremental: false \n    chalkboard:\n      src: chalkboard.json\n      storage: chalkboard_pres\n      theme: whiteboard\n      chalk-width: 4\nknitr:\n  opts_chunk: \n    echo: false\n    eval: false\n    message: false\n    warnings: false\n    comment: \"#>\" \n\neditor: visual\n---\n\n\n\n\n## Learning Objectives\n\n-   Multivariable Linear Regression\n\n-   Simulation Study 1\n\n-   Simulation Study 2\n\n-   Matrix Formulation\n\n# Multivariable Linear Regression\n\n## MLR\n\nMultivariable linear regression models are used when more than one explanatory variable is used to explain the outcome of interest.\n\n## Continuous Variable\n\nTo fit an additional continuous random variable to the model, we will only need to add it to the model:\n\n$$\nY = \\beta_0 +\\beta_1 X_1 + \\beta_2 X_2\n$$\n\n## Example\n\nLooking at the `penguins` from `palmerpenguins`, fit a model between `body_mass_g` as an outcome variable and `flipper_length_mm` and `bill_length_mm` as predictor variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\npenguins %$% lm(body_mass_g ~ flipper_length_mm + bill_length_mm)\n```\n:::\n\n\n## Interpretation\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> Call:\n#> lm(formula = body_mass_g ~ flipper_length_mm + bill_length_mm)\n#> \n#> Coefficients:\n#>       (Intercept)  flipper_length_mm     bill_length_mm  \n#>         -5736.897             48.145              6.047\n```\n\n\n:::\n:::\n\n\n## Categorical Variable\n\nA categorical variable can be included in a model, but a reference category must be specified.\n\n## Fitting a model with categorical variables\n\nTo fit a model with categorical variables, we must utilize dummy (binary) variables that indicate which category is being referenced. We use $C-1$ dummy variables where $C$ indicates the number of categories. When coded correctly, each category will be represented by a combination of dummy variables.\n\n## Example\n\nIf we have 4 categories, we will need 3 dummy variables:\n\n|         | Cat 1 | Cat 2 | Cat 3 | Cat 4 |\n|---------|-------|-------|-------|-------|\n| Dummy 1 | 1     | 0     | 0     | 0     |\n| Dummy 2 | 0     | 1     | 0     | 0     |\n| Dummy 3 | 0     | 0     | 1     | 0     |\n\nWhich one is the reference category?\n\n## Fitting a model with categorical variables\n\nLooking at the `penguins` from `palmerpenguins`, fit a model between `body_mass_g` as an outcome variable and `flipper_length_mm` and `islands` as predictor variables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\npenguins %$% lm(body_mass_g ~ flipper_length_mm + island)\n```\n:::\n\n\n## Interpreting Categorical Variable Results\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> Call:\n#> lm(formula = body_mass_g ~ flipper_length_mm + island)\n#> \n#> Coefficients:\n#>       (Intercept)  flipper_length_mm        islandDream    islandTorgersen  \n#>          -4624.98              44.54            -262.18            -185.13\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> [1] \"Biscoe\"    \"Dream\"     \"Torgersen\"\n```\n\n\n:::\n:::\n\n\n## Relevel a factor variable in R\n\n\n::: {.cell}\n\n:::\n\n\n# Simulation Study 1\n\n## Simulation Study 1\n\nSimulate 1000 random variables from the following model:\n\n$$\nY = 3 + 2X_1 + 4X_2 + \\epsilon\n$$\n\n-   $X_1\\sim N(2,1)$\n\n-   $X_2\\sim N(-4,1)$\n\n-   $\\epsilon\\sim N(0, 2)$\n\n\n::: {.cell}\n\n:::\n\n\n## Fit Model\n\nFit a model between $Y$ and $X_1$.\n\nRepeat the process 1000 times. and answer the following questions:\n\n-   On average does $\\beta_1$ get estimated correctly? Why?\n\n-   What is the average model variance?\n\n## MLR Model\n\nInstead of fitting a simple linear regression model. Fit a model that will include predictor $X_2$. This can be done by adding $X_2$ in R:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm(y ~ x1 + x2)\n```\n:::\n\n\nModify your simulation study and see what happens to $\\beta_1$ and the model variance.\n\n# Simulation Study 2\n\n## Simulation Study 2\n\nSimulate 1000 random variables from the following model:\n\n$$\nY = 3 + 2log(X_1) + \\epsilon\n$$\n\n-   $X_1\\sim N(8,1)$\n\n-   $\\epsilon\\sim N(0, 2)$\n\n\n::: {.cell}\n\n:::\n\n\n## Fit Model\n\nFit a model between $Y$ and $X_1$.\n\nRepeat the process 1000 times. and answer the following questions:\n\n-   On average does $\\beta_1$ get estimated correctly? Why?\n\n-   What is the average model variance?\n\n## SLR Model\n\nFit a simple linear regression model using $\\log(X_1)$ instead.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm(y ~ log(x1))\n```\n:::\n\n\nModify your simulation study and see what happens to $\\beta_1$ and the model variance.\n\n# Matrix Formulation\n\n## Matrix Formulation\n\n$$\nY_i = \\boldsymbol X_i^\\mathrm T \\boldsymbol \\beta + \\epsilon_i\n$$\n\n-   $Y_i$: Outcome Variable\n\n-   $\\boldsymbol X_i$: Predictors\n\n-   $\\boldsymbol \\beta$: Coefficients\n\n-   $\\epsilon_i$: error term\n\n## Matrix Formulation\n\nFit the following models using matrix formulas instead of the `lm` function.\n\n$$\nbody\\_mass\\_g = \\beta_0+\\beta_1flipper\\_length\\_mm + \\beta_2bill\\_length\\_mm \n$$\n\n$$\nbody\\_mass\\_g = \\beta_0 +\\beta_1 flipper\\_length\\_mm + \\beta_2 dream \\_island +\\beta_3 biscoe\\_island  \n$$\n\n$$\n\\boldsymbol\\beta = (\\boldsymbol X^\\mathrm T \\boldsymbol X)^{-1} \\boldsymbol X^\\mathrm T \\boldsymbol Y\n$$\n\nDefine $\\boldsymbol X$ in each case.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}