{
  "hash": "104c3d1e91f938cb8525135c4e135dd0",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Linear Regression\"\nformat:\n  revealjs:\n    scrollable: true\n    navigation-mode: vertical\n    controls-layout: bottom-right\n    controls-tutorial: true\n    incremental: false \n    chalkboard:\n      src: chalkboard.json\n      storage: chalkboard_pres\n      theme: whiteboard\n      chalk-width: 4\nknitr:\n  opts_chunk: \n    echo: false\n    eval: true\n    message: false\n    warnings: false\n    comment: \"#>\" \n\neditor: source\n---\n\n\n\n\n## Learning Objectives\n\n-   Associations\n\n-   Linear Regression\n\n-   Conducting it in R\n\n# Associations\n\n## Types of Associations\n\n-   Categorical vs Continuous\n\n-   Categorical vs Categorical\n\n-   Continuous vs Continuous\n\n## Categorical vs Continuous\n\nDescribing the relationship between categorical and continuous variables can be done by stratifying by the categorical variable and finding the mean or median, or conducting a statistical test:\n\n-   t-tests\n\n-   ANOVA\n\nMeasuring the association between species and flipper length from `palmerpenguins`:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Stratification\npenguins |>  drop_na()  |> \n  group_by(species) |>  \n  summarise(mean = mean(flipper_length_mm),\n            median = median(flipper_length_mm))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 3 × 3\n#>   species    mean median\n#>   <fct>     <dbl>  <dbl>\n#> 1 Adelie     190.    190\n#> 2 Chinstrap  196.    196\n#> 3 Gentoo     217.    216\n```\n\n\n:::\n\n```{.r .cell-code}\n# ANOVA\nspecies_aov <- aov(flipper_length_mm ~ species, penguins)\ntidy(species_aov)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 2 × 6\n#>   term         df  sumsq  meansq statistic    p.value\n#>   <chr>     <dbl>  <dbl>   <dbl>     <dbl>      <dbl>\n#> 1 species       2 52473. 26237.       595.  1.35e-111\n#> 2 Residuals   339 14953.    44.1       NA  NA\n```\n\n\n:::\n:::\n\n\n## Categorical vs Categorical\n\nComparing 2 categorical variables can be done by computing proportions or conducting a chi-square test. Below is an example comparing\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Count and Proportions\npenguins |>  group_by(species, island) |> \n  summarise(count = n(), proportions = n() / nrow(penguins))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> # A tibble: 5 × 4\n#> # Groups:   species [3]\n#>   species   island    count proportions\n#>   <fct>     <fct>     <int>       <dbl>\n#> 1 Adelie    Biscoe       44       0.128\n#> 2 Adelie    Dream        56       0.163\n#> 3 Adelie    Torgersen    52       0.151\n#> 4 Chinstrap Dream        68       0.198\n#> 5 Gentoo    Biscoe      124       0.360\n```\n\n\n:::\n\n```{.r .cell-code}\n# Chi-Square Test\npenguins |> with(chisq.test(species, island))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> \tPearson's Chi-squared test\n#> \n#> data:  species and island\n#> X-squared = 299.55, df = 4, p-value < 2.2e-16\n```\n\n\n:::\n:::\n\n\n## Continuous vs Continuous\n\nTo understand the relationship between two continuous random variables, we can use the following:\n\n-   Correlation\n\n-   Linear Regression\n\n## Correlation\n\nCorrelations measures the association between 2 continuous random variables.\n\n-   Pearson's Correlation\n\n-   Spearman's Correlation\n\n-   Kendall's Tau\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Pearson's Correlation\npenguins |> drop_na() |> cor.test(~ body_mass_g + flipper_length_mm, \n                                  data = _)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> \tPearson's product-moment correlation\n#> \n#> data:  body_mass_g and flipper_length_mm\n#> t = 32.562, df = 331, p-value < 2.2e-16\n#> alternative hypothesis: true correlation is not equal to 0\n#> 95 percent confidence interval:\n#>  0.8447622 0.8963550\n#> sample estimates:\n#>       cor \n#> 0.8729789\n```\n\n\n:::\n\n```{.r .cell-code}\n# Spearman's Correlation \npenguins |>  drop_na() |> cor.test(~ body_mass_g + flipper_length_mm,\n                                   data = _,\n                                   method = \"spearman\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> \tSpearman's rank correlation rho\n#> \n#> data:  body_mass_g and flipper_length_mm\n#> S = 982284, p-value < 2.2e-16\n#> alternative hypothesis: true rho is not equal to 0\n#> sample estimates:\n#>       rho \n#> 0.8403902\n```\n\n\n:::\n\n```{.r .cell-code}\n# Kendall's Tau\npenguins |>  drop_na() |> cor.test(~ body_mass_g + flipper_length_mm,\n                                   data = _,\n                                   method = \"kendall\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> \tKendall's rank correlation tau\n#> \n#> data:  body_mass_g and flipper_length_mm\n#> z = 17.683, p-value < 2.2e-16\n#> alternative hypothesis: true tau is not equal to 0\n#> sample estimates:\n#>       tau \n#> 0.6614597\n```\n\n\n:::\n:::\n\n\n## Scatter Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](6b_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n# Linear Regression\n\n## Linear Regression\n\nLinear regression is used to model the association between a set of predictor variables (x's) and an outcome variable (y). Linear regression will fit a line that best describes the data points.\n\n## Scatter Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](6b_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n## Simple Linear Regression\n\nSimple linear regression will model the association between one predictor variable and an outcome:\n\n$$\nY = \\beta_0 + \\beta_1 X + \\epsilon\n$$\n\n-   $\\beta_0$: Intercept term\n\n-   $\\beta_1$: Slope term\n\n-   $\\epsilon\\sim N(0,\\sigma^2)$\n\n## Estimated Model\n\n$$\n\\hat Y = \\hat \\beta_0 + \\hat \\beta_1 X\n$$\n\n## Process\n\n![](img/6b1.gif){fig-align=\"center\"}\n\n## Process\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](6b_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n\n## Sums of Error Squared\n\n$$\nRSS = \\sum^n_{i=1}(Y_i-\\hat Y_i)^2\n$$\n\n## Searching\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](6b_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n## Searching\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](6b_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n## Searching\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](6b_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n## Searching\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](6b_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n## Final\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](6b_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n\n# R Examples\n\n## R Formulas\n\nIn R, we create a formula using the `tilde`\n\nOutcome Variable `tilde` Independent Variables\n\n\n::: {.cell}\n\n```{.r .cell-code}\nooutcome_variable_name ~ independent_variable_name\n```\n:::\n\n\n## R Example\n\nApplying a linear regression model to `body_mass_g` (Predictor) and `flipper_length_mm` (Outcome) from `penguins`:\n\n::: panel-tabset\n## R Output\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n#> \n#> Call:\n#> lm(formula = flipper_length_mm ~ body_mass_g, data = penguins)\n#> \n#> Residuals:\n#>      Min       1Q   Median       3Q      Max \n#> -23.7626  -4.9138   0.9891   5.1166  16.6392 \n#> \n#> Coefficients:\n#>              Estimate Std. Error t value Pr(>|t|)    \n#> (Intercept) 1.367e+02  1.997e+00   68.47   <2e-16 ***\n#> body_mass_g 1.528e-02  4.668e-04   32.72   <2e-16 ***\n#> ---\n#> Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n#> \n#> Residual standard error: 6.913 on 340 degrees of freedom\n#>   (2 observations deleted due to missingness)\n#> Multiple R-squared:  0.759,\tAdjusted R-squared:  0.7583 \n#> F-statistic:  1071 on 1 and 340 DF,  p-value: < 2.2e-16\n```\n\n\n:::\n:::\n\n\n## Scatter Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](6b_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n### Interpretation\n\n$$\n\\hat y = 136.73 + 0.015 x\n$$\n:::\n\n## Simulation Example\n\n## Generate X Values\n\nSimulate 250 independent values (x) from $N(3, 1)$ and plot a histogram\n\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- rnorm(250, 3, 1)\n```\n:::\n\n\n## Generate Y Values\n\nCreate a new variable with the following formula:\n\n$$\nY_i = 3 X_i + 20\n$$\n\nCreate a Scatter Plot\n\n## Generate Error Term\n\nGenerate $\\epsilon_i\\sim N(0, 2)$\n\nCreate a histogram\n\n## Add error term\n\nCreate final form of $Y_i$:\n\n$$\nY_i = 3 X_i + 20 + \\epsilon_i\n$$\n\nCreate a scatter plot\n\n## Fit Model\n\n## Simulation Study\n\nTo confirm that `lm` works, repeat the process 100 times and obtain the average $\\beta$ estimates:\n\n1.  Generate 250 X values\n2.  Create Y Value\n3.  Add error term\n4.  Fit Model\n5.  Store Values\n\n## Simulation Study\n\nConduct a simulation study with this model:\n\n$$\nY_i = 8 X_i^2 - 4 X_i + 11 + \\epsilon_i\n$$\n$$\n\\epsilon_i \\sim N(0, 0.8) \n$$\n\nSimulat",
    "supporting": [
      "6b_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}