{
  "hash": "370ddabf5679c194e95ab08d8bb0e363",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Introduction to Statistical Learning\"\nformat:\n  revealjs:\n    scrollable: true\n    navigation-mode: vertical\n    controls-layout: bottom-right\n    controls-tutorial: true\n    incremental: false \n    chalkboard:\n      src: chalkboard.json\n      storage: chalkboard_pres\n      theme: whiteboard\n      chalk-width: 4\nknitr:\n  opts_chunk: \n    echo: true\n    eval: true\n    message: false\n    warnings: false\n    comment: \"#>\" \n    \nrevealjs-plugins:\n  - pointer\n  - verticator\n  \nfilters: \n  - reveal-header\n  - code-fullscreen\n\neditor: source\n---\n\n\n## Learning Outcomes\n\n-   Introduction to Statistical Learning\n\n-   Classification vs Regression\n\n-   Supervised vs Unsupervised Machine Learning\n\n-   Model Adequacy\n\n## Book\n\n![](https://images.squarespace-cdn.com/content/v1/5ff2adbe3fe4fe33db902812/1611294680091-25SIDM9AHA8ECIFFST23/Screen+Shot+2021-01-21+at+11.02.06+AM.png){fig-align=\"center\"}\n\n# Introduction to Statistical Learning\n\n## Introduction to Statistical Learning\n\n**What is Statistical Learning?**\n\n::: {#.fragment}\nStatistical learning is the task of predicting an outcome of interest given a set of predictor variables.\n:::\n\n## Motivating Example\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](6a_files/figure-revealjs/unnamed-chunk-1-1.png){width=960}\n:::\n:::\n\n\n## Statistical Learning Model\n\n$$\nY = f(\\boldsymbol X) + \\varepsilon\n$$\n\n-   $Y$: Outcome variable\n\n-   $f(\\cdot)$: systematic component explaining $Y$\n\n-   $\\boldsymbol X$: vector of predictor variables\n\n-   $\\varepsilon$: error term\n\n## Modeling $f(\\cdot)$: Parametric\n\n-   Linear Models\n\n-   Generalized Linear Models (GLM)\n\n## Modeling $f(\\cdot)$: Nonparametric\n\n-   Generalized Additive Models\n\n-   Local-Linear Models\n\n-   Smoothing Splines\n\n## Prediction\n\n-   Statistical Learning is only concerned with an accurate $Y$\n\n-   $f(\\cdot)$ is considered a black box\n\n-   We will not know how $\\boldsymbol X$ explains $Y$\n\n-   We choose flexible (nonparametric) models\n\n## Model Interpretability\n\n-   With a focus on prediction, model interpretability declines\n\n-   We will not know how changes in $\\boldsymbol X$ will affect $Y$\n\n# Classification vs Regression\n\n## Regression\n\nRegression in statistical learning terms indicates predicting a continuous random variable.\n\n<div>\n\nWhat are the methods that we learned to model continuous random variables?\n\n</div>\n\n## Example\n\n\n\n\n\n::: panel-tabset\n## Scatter Plot\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](6a_files/figure-revealjs/unnamed-chunk-3-1.png){width=960}\n:::\n:::\n\n\n## Regression\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](6a_files/figure-revealjs/unnamed-chunk-4-1.png){width=960}\n:::\n:::\n\n\n## GAM\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](6a_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n## Combined\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](6a_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n:::\n\n## Classification\n\nClassification in statistical learning terms indicates predicting a categorical random variable.\n\n<div>\n\nWhat are the methods that we learned to model categorical random variables?\n\n</div>\n\n## Example\n\n::: panel-tabset\n## Data\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](6a_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n## KNN\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n#>             iris_pred\n#>              setosa versicolor virginica\n#>   setosa         20          0         0\n#>   versicolor      0         19         1\n#>   virginica       0          0        20\n```\n\n\n:::\n:::\n\n\n## SVM\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n#>             Actual\n#> Predicted    setosa versicolor virginica\n#>   setosa         50          0         0\n#>   versicolor      0         48         2\n#>   virginica       0          2        48\n```\n\n\n:::\n:::\n\n\n## NN\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n#>             \n#> predicted    setosa versicolor virginica\n#>   setosa         25          0         0\n#>   versicolor      0         25         3\n#>   virginica       0          2        20\n```\n\n\n:::\n:::\n\n:::\n\n# Supervised vs Unsupervised Machine Learning\n\n## Machine Learning\n\nMachine learning is a set of methods used for predicting and classifying data. Several statistical methods are considered machine learning techniques.\n\n::: {#.fragement}\n#### Common Methods\n\n-   Regression\n\n-   Mixed-Effects\n\n-   Nonparametric Regression\n\n-   Neural Networks\n\n-   Tree-based methods\n\n-   Bayesian Methods\n:::\n\n## Training Data\n\nTraining Data is the data set used to construct a model.\n\n## Supervised\n\nSupervised Machine Learning techniques are techniques where the training data contains the outcome.\n\n## Unsupervised\n\nUnsupervised Machine Learning techniques are techniques where the training data **does not** contains the outcome.\n\n# Model Adequacy\n\n## Quality of Fit: Regression\n\n$$\nMSE = \\frac{1}{n}\\sum^n_{i=1}\\{y_i - \\hat f(\\boldsymbol x_i)\\}^2\n$$\n\n## Quality of Fit: Classification\n\n$$\nER = \\frac{1}{n}\\sum^n_{i=1}I(y_i \\ne \\hat y_i)\n$$\n\n## Bias-Variance Tradeoff\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](6a_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n## Bias-Variance Tradeoff\n\n$$\nE(MSE) = E\\left\\{y-\\hat f(x)\\right\\}^2 = Var\\left\\{\\hat f(x)\\right\\} + Bias\\left\\{\\hat f(x)\\right\\}^2 \n$$\n\n## Example\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](6a_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n## Using a Line\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](6a_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n## Using a Highly Fleible Model\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](6a_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n## Semi-Flexible\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](6a_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n## All\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\nx <- runif(100, 0, 10)\ny <- 3 * x^2 - 5*x + 3 + rnorm(100, sd = 15)\ndata.frame(x, y) |>\n  ggplot(aes(x, y)) +\n  geom_point() +\n  stat_smooth(method = \"lm\", \n              color = \"skyblue4\", fill = \"skyblue2\") +\n  stat_smooth(method = \"loess\", span = 0.075, \n              color = \"springgreen4\", fill = \"springgreen2\") +\n  stat_smooth(color = \"violetred\", fill = \"violet\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](6a_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n",
    "supporting": [
      "6a_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}